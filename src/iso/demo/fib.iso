REC "BUFFER.INIT" JMP SEC "BUFFER.INIT.END"
REC "STRING.INIT" JMP SEC "STRING.INIT.END"

RUN "FIB"
RUN "SYSTEM.EXIT"

FUN "PRINT.NUMBER",
	"NUMBER"
	SEC "PRINT.NUMBER.START"
		POS                 REM "Initialize BUFFER"
		VAR "BUFFER"    SET
		GBL "BUFFER.INTERFACE" GET
		STR "   " 10
		VAR "NUMBER"    GET REM "Convert number to string"
		NUM 0
		VAR "BUFFER"    GET
		RUN "STRING.FROM_UINT"
		RUN "CONSOLE.PRINT" REM "Print"
	SEC "PRINT.NUMBER.END"
		RET

FUN "FIB"
	SEC "FIB.START"
		NUM 1                  REM "Initialize var 0"
		VAR 0              SET
		NUM 1                  REM "Initialize var 1"
		VAR 1              SET
		POS                    REM "Initialize LOOP_STACK"
		VAR "LOOP_STACK"   SET
	SEC "FIB.LOOP"
		VAR "LOOP_STACK"   GET HOP REM "Reset STACK"
		VAR 0              GET
		VAR 1              GET
		RUN "PRINT.NUMBER" DUP
		VAR 0              SET ADD DUP
		VAR 1              SET
		NUM 255            CLS
		REC "FIB.LOOP"     JMC
	SEC "FIB.END"
		RET
